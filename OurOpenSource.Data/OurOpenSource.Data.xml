<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OurOpenSource.Data</name>
    </assembly>
    <members>
        <member name="T:OurOpenSource.Data.Base64">
            <summary>
            一个Base64转化类。
            A Base64 conveter class.
            </summary>
        </member>
        <member name="M:OurOpenSource.Data.Base64.ToBase64(System.Byte[])">
            <summary>
            将字节数据转化为Base64格式字符串。
            Convert bytes data to Base64 format string.
            </summary>
            <param name="value">
            字节数据。
            Bytes data.
            </param>
            <returns>
            转化后Base64格式字符串。
            Converted Base64 format string.
            </returns>
        </member>
        <member name="M:OurOpenSource.Data.Base64.ToBytes(System.String)">
            <summary>
            将Base64格式的字符串转化为字节数据。
            Convert Base64 format string to bytes data.
            </summary>
            <param name="value">
            Base64格式字符串。
            Base64 format string.
            </param>
            <returns>
            字节数据。
            Bytes data.
            </returns>
        </member>
        <member name="T:OurOpenSource.Data.FileFingerprint">
            <summary>
            文件指纹。
            File fingerprint.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprint.sha1">
            <summary>
            SHA1类。
            Class SHA1.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprint.sha256">
            <summary>
            SHA256类。
            Class SHA256.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprint.md5">
            <summary>
            MD5类。
            Class MD5.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprint.fileFingerprintChecksumType">
            <summary>
            该文件指纹包含的校验值类型。
            Checksum types include this file fingerprint.
            </summary>
        </member>
        <member name="P:OurOpenSource.Data.FileFingerprint.FileFingerprintChecksumType">
            <summary>
            该文件指纹包含的校验值类型。
            Checksum types include this file fingerprint.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprint.sha1Code">
            <summary>
            SHA1校验值。
            SHA1 checksum.
            </summary>
        </member>
        <member name="P:OurOpenSource.Data.FileFingerprint.SHA1Code">
            <summary>
            SHA1校验值。
            SHA1 checksum.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprint.sha256Code">
            <summary>
            SHA256校验值。
            SHA256 checksum.
            </summary>
        </member>
        <member name="P:OurOpenSource.Data.FileFingerprint.SHA256Code">
            <summary>
            SHA256校验值。
            SHA256 checksum.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprint.md5Code">
            <summary>
            MD5校验值。
            MD5 checksum.
            </summary>
        </member>
        <member name="P:OurOpenSource.Data.FileFingerprint.MD5Code">
            <summary>
            MD5校验值。
            MD5 checksum.
            </summary>
        </member>
        <member name="M:OurOpenSource.Data.FileFingerprint.ToBase64(OurOpenSource.Data.FileFingerprint)">
            <summary>
            将文件指纹转化为Base64格式的字符串。
            Convert file fingerprint to Base64 string.
            </summary>
            <param name="fileFingerprint">
            需要被转化的文件指纹。
            A file fingerprint need to convert.
            </param>
            <returns>
            转化后的base64字符串。
            Converted Base64 string.
            </returns>
        </member>
        <member name="M:OurOpenSource.Data.FileFingerprint.FromBase64(System.String)">
            <summary>
            将可识别为存储有文件指纹内容的Base64字符串转化为文件指纹。
            Convert Base64 string which representing file fingerprint to file fingerprint.
            </summary>
            <param name="base64">
            需要被转化的Base64字符串。
            A Base64 string need to onvert.
            </param>
            <returns>
            转化后的文件指纹。
            Converted file fingerprint.
            </returns>
        </member>
        <member name="M:OurOpenSource.Data.FileFingerprint.CheckFile(System.String,OurOpenSource.Data.FileFingerprint@,OurOpenSource.Data.FileFingerprintChecksumType)">
            <summary>
            用该指纹与另一个文件的指纹进行比较。
            Use this file gingerprint to compare with another one of a file.
            </summary>
            <param name="path">
            另一个文件的路径。
            Another file path.
            </param>
            <param name="fileFingerprint">
            由另一个文件生成的指纹。
            Generated file fingerprint of another file.
            </param>
            <param name="fileFingerprintChecksumType">
            需要比较的文件指纹类型。
            Necessary file fingerprint types for comparing.
            </param>
            <returns>
            两个文件指纹是否相同。
            Are two file fingerprint same.
            </returns>
        </member>
        <member name="M:OurOpenSource.Data.FileFingerprint.IsFileFingerprintSameMin(OurOpenSource.Data.FileFingerprint,OurOpenSource.Data.FileFingerprint)">
            /// <summary>
            取两个指纹共同指纹类型进行比较。
            Take the intersection of the two file fingerprint to compare.
            </summary>
            <remarks>
            当没有共同的指纹类型是将抛出`ArgumentException`。
            </remarks>
            <param name="fileFingerprint1">
            文件指纹1。
            File fingerprint 1.
            </param>
            <param name="fileFingerprint2">
            文件指纹2。
            File fingerprint 2.
            </param>
            <returns>
            两个文件指纹是否相同。
            Are two file fingerprint same.
            </returns>
            <exception cref="T:System.ArgumentException">
            当两个文件指纹交集为`FileFingerprintChecksumType.None`时将抛出`ArgumentException`。
            Throw `ArgumentException` when the intersection of the two file fingerprint is FileFingerprintChecksumType.None.
            <seealso cref="M:OurOpenSource.Data.FileFingerprint.IsFileFingerprintSame(OurOpenSource.Data.FileFingerprint,OurOpenSource.Data.FileFingerprint,OurOpenSource.Data.FileFingerprintChecksumType)"/>
            有些异常不列在此处。
            Some exceptions don't list here.
            </exception>
        </member>
        <member name="M:OurOpenSource.Data.FileFingerprint.IsFileFingerprintSame(OurOpenSource.Data.FileFingerprint,OurOpenSource.Data.FileFingerprint,OurOpenSource.Data.FileFingerprintChecksumType)">
            <summary>
            比较两个文件指纹是否相同。
            Compare two file fingerprints wheater they are same.
            </summary>
            <param name="fileFingerprint1">
            文件指纹1。
            File fingerprint 1.
            </param>
            <param name="fileFingerprint2">
            文件指纹2。
            File fingerprint 2.
            </param>
            <param name="fileFingerprintChecksumType">
            需要比较的文件指纹类型。
            Necessary file fingerprint types for comparing.
            </param>
            <returns>
            两个文件指纹是否相同。
            Are two file fingerprint same.
            </returns>
            <exception cref="T:System.ArgumentException">
            当两个文件指纹中有至少有一个没有包含所要求的指纹类型或`fileFingerprintChecksumType`为`FileFingerprintChecksumType.None`时将抛出`ArgumentException`。
            Throw `ArgumentException` when at least one file fingerprint of two haven't as same fingerprint type as `fileFingerprintChecksumType` or `fileFingerprintChecksumType` is `FileFingerprintChecksumType.None`.
            有些异常不列在此处。
            Some exceptions don't list here.
            </exception>
        </member>
        <member name="M:OurOpenSource.Data.FileFingerprint.#ctor(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            直接设置文件指纹的值。
            Directly set file fingerprint.
            </summary>
            <param name="sha1Code">
            SHA1的值。
            SHA1 value.
            如果没有可以设置为null。
            Please set null if nano.
            </param>
            <param name="sha256Code">
            SHA256的值。
            SHA256 value.
            如果没有可以设置为null。
            Please set null if nano.
            </param>
            <param name="md5Code">
            MD5的值。
            MD5 value.
            如果没有可以设置为null。
            Please set null if nano.
            </param>
        </member>
        <member name="M:OurOpenSource.Data.FileFingerprint.DirectSet(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            直接设置文件指纹的值。
            Directly set file fingerprint.
            </summary>
            <param name="sha1Code">
            SHA1的值。
            SHA1 value.
            如果没有可以设置为null。
            Please set null if nano.
            </param>
            <param name="sha256Code">
            SHA256的值。
            SHA256 value.
            如果没有可以设置为null。
            Please set null if nano.
            </param>
            <param name="md5Code">
            MD5的值。
            MD5 value.
            如果没有可以设置为null。
            Please set null if nano.
            </param>
        </member>
        <member name="M:OurOpenSource.Data.FileFingerprint.#ctor(System.String,OurOpenSource.Data.FileFingerprintChecksumType)">
            <summary>
            从文件获取校验值。
            Get checksum from file.
            </summary>
            <param name="path">
            目标文件的路径。
            the path of target file.
            </param>
            <param name="fileFingerprintChecksumType">
            需要的文件指纹类型。
            Necessary file fingerprint types.
            </param>
        </member>
        <member name="M:OurOpenSource.Data.FileFingerprint.FromFile(System.String,OurOpenSource.Data.FileFingerprintChecksumType)">
            <summary>
            从文件获取校验值。
            Get checksum from file.
            </summary>
            <param name="path">
            目标文件的路径。
            the path of target file.
            </param>
            <param name="fileFingerprintChecksumType">
            需要的文件指纹类型。
            Necessary file fingerprint types.
            </param>
        </member>
        <member name="T:OurOpenSource.Data.FileFingerprintChecksumType">
            <summary>
            文件指纹校验值类型。
            File fingerprint checksum types.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprintChecksumType.None">
            <summary>
            无。
            None.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprintChecksumType.MD5">
            <summary>
            包含MD5校验值。
            Including MD5 checksum.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprintChecksumType.SHA1">
            <summary>
            包含SHA1校验值。
            Including SHA1 checksum.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprintChecksumType.SHA256">
            <summary>
            包含SHA256校验值。
            Including SHA256 checksum.
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.FileFingerprintChecksumType.All">
            <summary>
            包含所以类型的校验值。
            Including all types of checksum.
            </summary>
        </member>
        <member name="T:OurOpenSource.Data.TemperatureUnit">
            <summary>
            温度计量单位。
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.TemperatureUnit.Kelvin">
            <summary>
            开尔文。
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.TemperatureUnit.DegreesCelsius">
            <summary>
            摄氏度。
            </summary>
        </member>
        <member name="F:OurOpenSource.Data.TemperatureUnit.DegreesFahrenheit">
            <summary>
            华氏度。
            </summary>
        </member>
        <member name="T:OurOpenSource.Data.Temperature">
            <summary>
            温度。
            用存储温度数值的类。
            </summary>
        </member>
        <member name="P:OurOpenSource.Data.Temperature.CheckTemperature">
            <summary>
            是否在每次修改`Temperature.Value`的值时，进行检查，检查其是否大于等于`0K`。
            </summary>
            <remarks>
            检查过程中，如果检测到该值小于`0K`并且大于等于`-double.Epsilon`时，其会被自动纠正到`0K`。
            </remarks>
        </member>
        <member name="F:OurOpenSource.Data.Temperature.ZeroKelvin">
            <summary>
            以摄氏度为单位的绝对零度。
            </summary>
        </member>
        <member name="M:OurOpenSource.Data.Temperature.GetZeroKelvin(OurOpenSource.Data.TemperatureUnit)">
            <summary>
            获取`0K`。
            </summary>
            <param name="unit">目标温度单位。</param>
            <returns>以`unit`为单位表示的`0K`。</returns>
        </member>
        <member name="M:OurOpenSource.Data.Temperature.IsGreaterOrEqualZeroKelvin(System.Double,OurOpenSource.Data.TemperatureUnit,System.Double@)">
            <summary>
            检查温度是否大于等于`0K`。
            </summary>
            <remarks>
            该方法不受`CheckTemperature`开关的影响。
            </remarks>
            <param name="value">温度。</param>
            <param name="unit">温度的单位。</param>
            <param name="correctedValue">纠正后的值。检查过程中，如果检测到该值小于`0K`并且大于等于`-double.Epsilon`时，其会被自动纠正到`0K`。</param>
            <returns>温度是否大于等于`0K`。</returns>
        </member>
        <member name="M:OurOpenSource.Data.Temperature.Clone">
            <summary>
            克隆温度。
            </summary>
            <returns>克隆到的温度。</returns>
        </member>
        <member name="P:OurOpenSource.Data.Temperature.Value">
            <summary>
            温度数值。
            </summary>
        </member>
        <member name="P:OurOpenSource.Data.Temperature.Unit">
            <summary>
            温度单位。
            </summary>
        </member>
        <member name="M:OurOpenSource.Data.Temperature.Convert(OurOpenSource.Data.Temperature,OurOpenSource.Data.TemperatureUnit)">
            <summary>
            转化温度。
            </summary>
            <param name="origin">原温度。</param>
            <param name="targetUnit">目标温度单位。</param>
            <returns>转换后的温度。</returns>
        </member>
        <member name="M:OurOpenSource.Data.Temperature.Convert(System.Double,OurOpenSource.Data.TemperatureUnit,OurOpenSource.Data.TemperatureUnit)">
            <summary>
            转化温度。
            </summary>
            <param name="origin">原温度数值。</param>
            <param name="originUnit">原温度单位。</param>
            <param name="targetUnit">目标温度单位。</param>
            <returns>转换后的温度。</returns>
            <exception cref="T:System.ArgumentException">当温度单位不存在时，会抛出此异常。</exception>
        </member>
        <member name="M:OurOpenSource.Data.Temperature.ToString">
            <summary>
            降温度转化为字符串。
            </summary>
            <returns>字符串。</returns>
            <exception cref="T:System.ArgumentException">当温度单位不存在时，会抛出此异常。</exception>
        </member>
        <member name="M:OurOpenSource.Data.Temperature.Parse(System.String)">
            <summary>
            将字符串转化为温度。
            </summary>
            <remarks>
            字符串格式应当为整数、浮点数或科学记数法表示的数字（E的大小写不分）+单位K（开尔文）、C（摄氏度）或F（华氏度）（不分大小写），两部分之间或之外允许有空白符（由Unicode定义）如：
            `300K`、`4.5 C   `、` -1E-1 F`。
            </remarks>
            <param name="text">字符串。</param>
            <returns>温度。</returns>
            <exception cref="T:System.FormatException">当字符串格式不对时，会抛出此异常。</exception>
            <exception cref="T:System.ArgumentException">当温度单位不存在时，会抛出此异常。</exception>
        </member>
        <member name="M:OurOpenSource.Data.Temperature.#ctor(System.Double,OurOpenSource.Data.TemperatureUnit,System.Boolean)">
            <summary>
            初始化温度。
            </summary>
            <param name="value">温度值。</param>
            <param name="unit">温度单位。</param>
            <param name="ignoreCheckTemperatureOnce">是否在初始化时跳过绝对零度检查。</param>
        </member>
    </members>
</doc>
